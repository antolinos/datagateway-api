components:
  parameters:
    DISTINCT_FILTER:
      description: Apply distinct filter to the query. Return unique values for the
        fields requested.
      in: query
      name: distinct
      schema:
        items:
          type: string
        type: array
    INCLUDE_FILTER:
      description: Apply include filter to the query. Given the names of related entities,
        include them in the results. Only one include parameter is allowed.
      examples:
        array:
          value:
          - RELATED_COLUMN_1
          - RELATED_COLUMN_2
        array of multi-level:
          value:
          - RELATED_COLUMN_1
          - RELATED_COLUMN_2: RELATED_COLUMN_2_RELATED_COLUMN_1
          - RELATED_COLUMN_3:
            - RELATED_COLUMN_3_RELATED_COLUMN_1
            - RELATED_COLUMN_3_RELATED_COLUMN_2
        multi-level:
          value:
            RELATED_COLUMN: RELATED_COLUMN_RELATED_COLUMN
        multi-level array:
          value:
            RELATED_COLUMN:
            - RELATED_COLUMN_RELATED_COLUMN_1
            - RELATED_COLUMN_RELATED_COLUMN_2
        single:
          value: RELATED_COLUMN
      in: query
      name: include
      schema:
        oneOf:
        - type: string
        - items:
            oneOf:
            - type: string
            - additionalProperties:
                oneOf:
                - type: string
                - items:
                  - type: string
                  type: array
              type: object
          type: array
        - additionalProperties:
            oneOf:
            - type: string
            - items:
              - type: string
              type: array
          type: object
    LIMIT_FILTER:
      description: Apply limit filter to the query. Limit the number of entities returned.
      in: query
      name: limit
      schema:
        type: integer
    ORDER_FILTER:
      description: Apply order filters to the query. Given a field and direction,
        order the returned entities.
      examples:
        asc:
          value:
          - id asc
        desc:
          value:
          - id desc
      in: query
      name: order
      schema:
        items:
          type: string
        type: array
    SKIP_FILTER:
      description: Apply skip filter to the query. Offset the returned entities by
        a given number.
      in: query
      name: skip
      schema:
        type: integer
    WHERE_FILTER:
      description: 'Apply where filters to the query. The possible operators are:
        ne, like, lt, lte, gt, gte, in and eq. Please modify the examples before executing
        a request if you are having issues with the example values.'
      examples:
        eq:
          value:
          - id:
              eq: 1
        gt:
          value:
          - id:
              gt: 10
        gte:
          value:
          - id:
              gte: 50
        in:
          value:
          - id:
              in:
              - 1
              - 2
              - 3
        like:
          value:
          - name:
              like: dog
        lt:
          value:
          - id:
              lt: 10
        lte:
          value:
          - id:
              lte: 50
        ne:
          value:
          - id:
              ne: 1
      in: query
      name: where
      schema:
        items:
          additionalProperties:
            description: Name of the column to apply the filter on
            maxProperties: 1
            minProperties: 1
            oneOf:
            - properties:
                eq:
                  oneOf:
                  - type: string
                  - type: number
                  - type: integer
                  - type: boolean
              title: Equality
              type: object
            - properties:
                ne:
                  oneOf:
                  - type: string
                  - type: number
                  - type: integer
                  - type: boolean
              title: Inequality
              type: object
            - properties:
                like:
                  type: string
              title: Substring equality
              type: object
            - properties:
                lt:
                  oneOf:
                  - type: number
                  - type: integer
              title: Less than
              type: object
            - properties:
                lte:
                  oneOf:
                  - type: number
                  - type: integer
              title: Less than or equal
              type: object
            - properties:
                gt:
                  oneOf:
                  - type: number
                  - type: integer
              title: Greater than
              type: object
            - properties:
                gte:
                  oneOf:
                  - type: number
                  - type: integer
              title: Greater than or equal
              type: object
            - properties:
                in:
                  items:
                    oneOf:
                    - type: string
                    - type: number
                    - type: integer
                  type: array
              title: Equality from a list of values
              type: object
            title: Column
            type: object
          type: object
        type: array
  schemas:
    APPLICATION:
      properties:
        FACILITY:
          $ref: '#/components/schemas/FACILITY'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        facilityID:
          type: integer
        id:
          readOnly: true
          type: integer
        jobs:
          items:
            $ref: '#/components/schemas/JOB'
          type: array
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        version:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - version
      - facilityID
    DATACOLLECTION:
      properties:
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        dataCollectionDatafiles:
          items:
            $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
          type: array
        dataCollectionDatasets:
          items:
            $ref: '#/components/schemas/DATACOLLECTIONDATASET'
          type: array
        dataCollectionParameters:
          items:
            $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
          type: array
        doi:
          type: string
        id:
          readOnly: true
          type: integer
        jobs:
          items:
            $ref: '#/components/schemas/JOB'
          type: array
        modId:
          type: string
        modTime:
          format: datetime
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
    DATACOLLECTIONDATAFILE:
      properties:
        DATACOLLECTION:
          $ref: '#/components/schemas/DATACOLLECTION'
        DATAFILE:
          $ref: '#/components/schemas/DATAFILE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        dataCollectionID:
          type: integer
        datafileID:
          type: integer
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - dataCollectionID
      - datafileID
    DATACOLLECTIONDATASET:
      properties:
        DATACOLLECTION:
          $ref: '#/components/schemas/DATACOLLECTION'
        DATASET:
          $ref: '#/components/schemas/DATASET'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        dataCollectionID:
          type: integer
        datasetID:
          type: integer
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - dataCollectionID
      - datasetID
    DATACOLLECTIONPARAMETER:
      properties:
        DATACOLLECTION:
          $ref: '#/components/schemas/DATACOLLECTION'
        PARAMETERTYPE:
          $ref: '#/components/schemas/PARAMETERTYPE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        dataCollectionID:
          type: integer
        dateTimeValue:
          format: datetime
          type: string
        error:
          type: string
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        numericValue:
          type: string
        parameterTypeID:
          type: integer
        rangeBottom:
          type: string
        rangeTop:
          type: string
        stringValue:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - dataCollectionID
      - parameterTypeID
    DATAFILE:
      properties:
        DATAFILEFORMAT:
          $ref: '#/components/schemas/DATAFILEFORMAT'
        DATASET:
          $ref: '#/components/schemas/DATASET'
        checksum:
          type: string
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        dataCollectionDatafiles:
          items:
            $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
          type: array
        datafileCreateTime:
          format: datetime
          type: string
        datafileFormatID:
          type: integer
        datafileModTime:
          format: datetime
          type: string
        datafileParameters:
          items:
            $ref: '#/components/schemas/DATAFILEPARAMETER'
          type: array
        datasetID:
          type: integer
        description:
          type: string
        doi:
          type: string
        fileSize:
          type: integer
        id:
          readOnly: true
          type: integer
        location:
          type: string
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        relatedDatafiles:
          items:
            $ref: '#/components/schemas/RELATEDDATAFILE'
          type: array
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - datasetID
    DATAFILEFORMAT:
      properties:
        FACILITY:
          $ref: '#/components/schemas/FACILITY'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        datafiles:
          items:
            $ref: '#/components/schemas/DATAFILE'
          type: array
        description:
          type: string
        facilityID:
          type: integer
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        type:
          type: string
        version:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - version
      - facilityID
    DATAFILEPARAMETER:
      properties:
        DATAFILE:
          $ref: '#/components/schemas/DATAFILE'
        PARAMETERTYPE:
          $ref: '#/components/schemas/PARAMETERTYPE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        datafileID:
          type: integer
        dateTimeValue:
          format: datetime
          type: string
        error:
          type: string
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        numericValue:
          type: string
        parameterTypeID:
          type: integer
        rangeBottom:
          type: string
        rangeTop:
          type: string
        stringValue:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - datafileID
      - parameterTypeID
    DATASET:
      properties:
        DATASETTYPE:
          $ref: '#/components/schemas/DATASETTYPE'
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        SAMPLE:
          $ref: '#/components/schemas/SAMPLE'
        complete:
          type: boolean
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        dataCollectionDatasets:
          items:
            $ref: '#/components/schemas/DATACOLLECTIONDATASET'
          type: array
        datafiles:
          items:
            $ref: '#/components/schemas/DATAFILE'
          type: array
        datasetParameters:
          items:
            $ref: '#/components/schemas/DATASETPARAMETER'
          type: array
        description:
          type: string
        doi:
          type: string
        endDate:
          format: datetime
          type: string
        id:
          readOnly: true
          type: integer
        investigationID:
          type: integer
        location:
          type: string
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        sampleID:
          type: integer
        startDate:
          format: datetime
          type: string
        typeID:
          type: integer
      required:
      - id
      - complete
      - createId
      - createTime
      - modId
      - modTime
      - name
      - investigationID
      - typeID
    DATASETPARAMETER:
      properties:
        DATASET:
          $ref: '#/components/schemas/DATASET'
        PARAMETERTYPE:
          $ref: '#/components/schemas/PARAMETERTYPE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        datasetID:
          type: integer
        dateTimeValue:
          format: datetime
          type: string
        error:
          type: string
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        numericValue:
          type: string
        parameterTypeID:
          type: integer
        rangeBottom:
          type: string
        rangeTop:
          type: string
        stringValue:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - datasetID
      - parameterTypeID
    DATASETTYPE:
      properties:
        FACILITY:
          $ref: '#/components/schemas/FACILITY'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        datasets:
          items:
            $ref: '#/components/schemas/DATASET'
          type: array
        description:
          type: string
        facilityID:
          type: integer
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - facilityID
    FACILITY:
      properties:
        applications:
          items:
            $ref: '#/components/schemas/APPLICATION'
          type: array
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        datafileFormats:
          items:
            $ref: '#/components/schemas/DATAFILEFORMAT'
          type: array
        datasetTypes:
          items:
            $ref: '#/components/schemas/DATASETTYPE'
          type: array
        daysUntilRelease:
          type: integer
        description:
          type: string
        facilityCycles:
          items:
            $ref: '#/components/schemas/FACILITYCYCLE'
          type: array
        fullName:
          type: string
        id:
          readOnly: true
          type: integer
        instruments:
          items:
            $ref: '#/components/schemas/INSTRUMENT'
          type: array
        investigationTypes:
          items:
            $ref: '#/components/schemas/INVESTIGATIONTYPE'
          type: array
        investigations:
          items:
            $ref: '#/components/schemas/INVESTIGATION'
          type: array
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        parameterTypes:
          items:
            $ref: '#/components/schemas/PARAMETERTYPE'
          type: array
        sampleTypes:
          items:
            $ref: '#/components/schemas/SAMPLETYPE'
          type: array
        url:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
    FACILITYCYCLE:
      properties:
        FACILITY:
          $ref: '#/components/schemas/FACILITY'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        description:
          type: string
        endDate:
          format: datetime
          type: string
        facilityID:
          type: integer
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        startDate:
          format: datetime
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - facilityID
    GROUPING:
      properties:
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        grouping:
          items:
            $ref: '#/components/schemas/GROUPING'
          type: array
        id:
          readOnly: true
          type: integer
        investigationGroups:
          items:
            $ref: '#/components/schemas/INVESTIGATIONGROUP'
          type: array
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/RULE'
          type: array
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
    INSTRUMENT:
      properties:
        FACILITY:
          $ref: '#/components/schemas/FACILITY'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        description:
          type: string
        facilityID:
          type: integer
        fullName:
          type: string
        id:
          readOnly: true
          type: integer
        instrumentScientists:
          items:
            $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
          type: array
        investigationInstruments:
          items:
            $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
          type: array
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        type:
          type: string
        url:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - facilityID
    INSTRUMENTSCIENTIST:
      properties:
        INSTRUMENT:
          $ref: '#/components/schemas/INSTRUMENT'
        USER:
          $ref: '#/components/schemas/USER'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        id:
          readOnly: true
          type: integer
        instrumentID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        userID:
          type: integer
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - instrumentID
      - userID
    INVESTIGATION:
      properties:
        FACILITY:
          $ref: '#/components/schemas/FACILITY'
        INVESTIGATIONTYPE:
          $ref: '#/components/schemas/INVESTIGATIONTYPE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        datasets:
          items:
            $ref: '#/components/schemas/DATASET'
          type: array
        doi:
          type: string
        endDate:
          format: datetime
          type: string
        facilityID:
          type: integer
        id:
          readOnly: true
          type: integer
        investigationGroups:
          items:
            $ref: '#/components/schemas/INVESTIGATIONGROUP'
          type: array
        investigationInstruments:
          items:
            $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
          type: array
        investigationParameters:
          items:
            $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
          type: array
        investigationUsers:
          items:
            $ref: '#/components/schemas/INVESTIGATIONUSER'
          type: array
        keywords:
          items:
            $ref: '#/components/schemas/KEYWORD'
          type: array
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        publications:
          items:
            $ref: '#/components/schemas/PUBLICATION'
          type: array
        releaseDate:
          format: datetime
          type: string
        samples:
          items:
            $ref: '#/components/schemas/SAMPLE'
          type: array
        shifts:
          items:
            $ref: '#/components/schemas/SHIFT'
          type: array
        startDate:
          format: datetime
          type: string
        studyInvestigations:
          items:
            $ref: '#/components/schemas/STUDYINVESTIGATION'
          type: array
        summary:
          type: string
        title:
          type: string
        typeID:
          type: integer
        visitId:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - title
      - visitId
      - facilityID
      - typeID
    INVESTIGATIONGROUP:
      properties:
        GROUPING:
          $ref: '#/components/schemas/GROUPING'
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        groupID:
          type: integer
        id:
          readOnly: true
          type: integer
        investigationID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        role:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - role
      - groupID
      - investigationID
    INVESTIGATIONINSTRUMENT:
      properties:
        INSTRUMENT:
          $ref: '#/components/schemas/INSTRUMENT'
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        id:
          readOnly: true
          type: integer
        instrumentID:
          type: integer
        investigationID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - instrumentID
      - investigationID
    INVESTIGATIONPARAMETER:
      properties:
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        PARAMETERTYPE:
          $ref: '#/components/schemas/PARAMETERTYPE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        dateTimeValue:
          format: datetime
          type: string
        error:
          type: string
        id:
          readOnly: true
          type: integer
        investigationID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        numericValue:
          type: string
        parameterTypeID:
          type: integer
        rangeBottom:
          type: string
        rangeTop:
          type: string
        stringValue:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - investigationID
      - parameterTypeID
    INVESTIGATIONTYPE:
      properties:
        FACILITY:
          $ref: '#/components/schemas/FACILITY'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        description:
          type: string
        facilityID:
          type: integer
        id:
          readOnly: true
          type: integer
        investigations:
          items:
            $ref: '#/components/schemas/INVESTIGATION'
          type: array
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - facilityID
    INVESTIGATIONUSER:
      properties:
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        USER:
          $ref: '#/components/schemas/USER'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        id:
          readOnly: true
          type: integer
        investigationID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        role:
          type: string
        userID:
          type: integer
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - role
      - investigationID
      - userID
    JOB:
      properties:
        APPLICATION:
          $ref: '#/components/schemas/APPLICATION'
        DATACOLLECTION:
          $ref: '#/components/schemas/DATACOLLECTION'
        applicationID:
          type: integer
        arguments:
          type: string
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        id:
          readOnly: true
          type: integer
        inputDataCollectionID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        outputDataCollectionID:
          type: integer
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - applicationID
    KEYWORD:
      properties:
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        id:
          readOnly: true
          type: integer
        investigationID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - investigationID
    PARAMETERTYPE:
      properties:
        FACILITY:
          $ref: '#/components/schemas/FACILITY'
        applicableToDataCollection:
          type: boolean
        applicableToDatafile:
          type: boolean
        applicableToDataset:
          type: boolean
        applicableToInvestigation:
          type: boolean
        applicableToSample:
          type: boolean
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        dataCollectionParameters:
          items:
            $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
          type: array
        datafileParameters:
          items:
            $ref: '#/components/schemas/DATAFILEPARAMETER'
          type: array
        datasetParameters:
          items:
            $ref: '#/components/schemas/DATASETPARAMETER'
          type: array
        description:
          type: string
        enforced:
          type: boolean
        facilityID:
          type: integer
        id:
          readOnly: true
          type: integer
        investigationParameters:
          items:
            $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
          type: array
        maximumNumericValue:
          type: string
        minimumNumericValue:
          type: string
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        permissibleStringValues:
          items:
            $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
          type: array
        sampleParameters:
          items:
            $ref: '#/components/schemas/SAMPLEPARAMETER'
          type: array
        units:
          type: string
        unitsFullName:
          type: string
        valueType:
          type: integer
        verified:
          type: boolean
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - units
      - valueType
      - facilityID
    PERMISSIBLESTRINGVALUE:
      properties:
        PARAMETERTYPE:
          $ref: '#/components/schemas/PARAMETERTYPE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        parameterTypeID:
          type: integer
        value:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - value
      - parameterTypeID
    PUBLICATION:
      properties:
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        doi:
          type: string
        fullReference:
          type: string
        id:
          readOnly: true
          type: integer
        investigationID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        repository:
          type: string
        repositoryId:
          type: string
        url:
          type: string
      required:
      - id
      - createId
      - createTime
      - fullReference
      - modId
      - modTime
      - investigationID
    PUBLICSTEP:
      properties:
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        field:
          type: string
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        origin:
          type: string
      required:
      - id
      - createId
      - createTime
      - field
      - modId
      - modTime
      - origin
    RELATEDDATAFILE:
      properties:
        DATAFILE:
          $ref: '#/components/schemas/DATAFILE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        destDatafileID:
          type: integer
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        relation:
          type: string
        sourceDatafileID:
          type: integer
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - relation
      - destDatafileID
      - sourceDatafileID
    RULE:
      properties:
        GROUPING:
          $ref: '#/components/schemas/GROUPING'
        attribute:
          type: string
        bean:
          type: string
        c:
          type: integer
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        crudFlags:
          type: string
        crudJPQL:
          type: string
        d:
          type: integer
        groupingID:
          type: integer
        id:
          readOnly: true
          type: integer
        includeJPQL:
          type: string
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        r:
          type: integer
        restricted:
          type: integer
        searchJPQL:
          type: string
        u:
          type: integer
        what:
          type: string
      required:
      - id
      - createId
      - createTime
      - crudFlags
      - modId
      - modTime
      - what
    SAMPLE:
      properties:
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        SAMPLETYPE:
          $ref: '#/components/schemas/SAMPLETYPE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        datasets:
          items:
            $ref: '#/components/schemas/DATASET'
          type: array
        id:
          readOnly: true
          type: integer
        investigationID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        sampleParameters:
          items:
            $ref: '#/components/schemas/SAMPLEPARAMETER'
          type: array
        sampleTypeID:
          type: integer
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
      - investigationID
    SAMPLEPARAMETER:
      properties:
        PARAMETERTYPE:
          $ref: '#/components/schemas/PARAMETERTYPE'
        SAMPLE:
          $ref: '#/components/schemas/SAMPLE'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        dateTimeValue:
          format: datetime
          type: string
        error:
          type: string
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        numericValue:
          type: string
        parameterTypeID:
          type: integer
        rangeBottom:
          type: string
        rangeTop:
          type: string
        sampleID:
          type: integer
        stringValue:
          type: string
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - sampleID
      - parameterTypeID
    SAMPLETYPE:
      properties:
        FACILITY:
          $ref: '#/components/schemas/FACILITY'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        facilityID:
          type: integer
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        molecularFormula:
          type: string
        name:
          type: string
        safetyInformation:
          type: string
        samples:
          items:
            $ref: '#/components/schemas/SAMPLE'
          type: array
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - molecularFormula
      - name
      - facilityID
    SHIFT:
      properties:
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        comment:
          type: string
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        endDate:
          format: datetime
          type: string
        id:
          readOnly: true
          type: integer
        investigationID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        startDate:
          format: datetime
          type: string
      required:
      - id
      - createId
      - createTime
      - endDate
      - modId
      - modTime
      - startDate
      - investigationID
    STUDY:
      properties:
        USER:
          $ref: '#/components/schemas/USER'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        description:
          type: string
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        pid:
          type: string
        startDate:
          format: datetime
          type: string
        status:
          type: integer
        studyInvestigations:
          items:
            $ref: '#/components/schemas/STUDYINVESTIGATION'
          type: array
        userID:
          type: integer
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
    STUDYINVESTIGATION:
      properties:
        INVESTIGATION:
          $ref: '#/components/schemas/INVESTIGATION'
        STUDY:
          $ref: '#/components/schemas/STUDY'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        id:
          readOnly: true
          type: integer
        investigationID:
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        studyID:
          type: integer
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - investigationID
      - studyID
    USER:
      properties:
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        email:
          type: string
        fullName:
          type: string
        id:
          readOnly: true
          type: integer
        instrumentScientists:
          items:
            $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
          type: array
        investigationUsers:
          items:
            $ref: '#/components/schemas/INVESTIGATIONUSER'
          type: array
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        name:
          type: string
        orcidId:
          type: string
        studies:
          items:
            $ref: '#/components/schemas/STUDY'
          type: array
        userGroups:
          items:
            $ref: '#/components/schemas/USERGROUP'
          type: array
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - name
    USERGROUP:
      properties:
        GROUPING:
          $ref: '#/components/schemas/GROUPING'
        USER:
          $ref: '#/components/schemas/USER'
        createId:
          type: string
        createTime:
          format: datetime
          type: string
        groupID:
          type: integer
        id:
          readOnly: true
          type: integer
        modId:
          type: string
        modTime:
          format: datetime
          type: string
        userID:
          type: integer
      required:
      - id
      - createId
      - createTime
      - modId
      - modTime
      - groupID
      - userID
  securitySchemes:
    session_id:
      bearerFormat: uuid
      scheme: bearer
      type: http
info:
  title: DataGateway API
  version: '1.0'
openapi: 3.0.3
paths:
  /datagateway-api/applications:
    get:
      description: Retrieves a list of Application objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/APPLICATION'
                type: array
          description: Success - returns Application that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Applications
      tags:
      - Applications
    patch:
      description: Updates Application object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/APPLICATION'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/APPLICATION'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Applications
      tags:
      - Applications
    post:
      description: Creates new Application object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/APPLICATION'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/APPLICATION'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Applications
      tags:
      - Applications
  /datagateway-api/applications/{id_}:
    delete:
      description: Updates Application with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Applications by id
      tags:
      - Applications
    get:
      description: Retrieves a list of Application objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APPLICATION'
          description: Success - the matching Application
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Application matching the given ID
      tags:
      - Applications
    patch:
      description: Updates Application with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APPLICATION'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APPLICATION'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Applications by id
      tags:
      - Applications
  /datagateway-api/applications/count:
    get:
      description: Return the count of the Application objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Application objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Applications
      tags:
      - Applications
  /datagateway-api/applications/findone:
    get:
      description: Retrieves the first Application objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APPLICATION'
          description: Success - a Application object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Application
      tags:
      - Applications
  /datagateway-api/datacollectiondatafiles:
    get:
      description: Retrieves a list of DataCollectionDatafile objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
                type: array
          description: Success - returns DataCollectionDatafile that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get DataCollectionDatafiles
      tags:
      - DataCollectionDatafiles
    patch:
      description: Updates DataCollectionDatafile object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DataCollectionDatafiles
      tags:
      - DataCollectionDatafiles
    post:
      description: Creates new DataCollectionDatafile object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new DataCollectionDatafiles
      tags:
      - DataCollectionDatafiles
  /datagateway-api/datacollectiondatafiles/{id_}:
    delete:
      description: Updates DataCollectionDatafile with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete DataCollectionDatafiles by id
      tags:
      - DataCollectionDatafiles
    get:
      description: Retrieves a list of DataCollectionDatafile objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
          description: Success - the matching DataCollectionDatafile
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the DataCollectionDatafile matching the given ID
      tags:
      - DataCollectionDatafiles
    patch:
      description: Updates DataCollectionDatafile with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DataCollectionDatafiles by id
      tags:
      - DataCollectionDatafiles
  /datagateway-api/datacollectiondatafiles/count:
    get:
      description: Return the count of the DataCollectionDatafile objects that would
        be retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the DataCollectionDatafile objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count DataCollectionDatafiles
      tags:
      - DataCollectionDatafiles
  /datagateway-api/datacollectiondatafiles/findone:
    get:
      description: Retrieves the first DataCollectionDatafile objects that satisfies
        the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'
          description: Success - a DataCollectionDatafile object that satisfies the
            filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single DataCollectionDatafile
      tags:
      - DataCollectionDatafiles
  /datagateway-api/datacollectiondatasets:
    get:
      description: Retrieves a list of DataCollectionDataset objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTIONDATASET'
                type: array
          description: Success - returns DataCollectionDataset that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get DataCollectionDatasets
      tags:
      - DataCollectionDatasets
    patch:
      description: Updates DataCollectionDataset object(s) with details provided in
        the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATACOLLECTIONDATASET'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTIONDATASET'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DataCollectionDatasets
      tags:
      - DataCollectionDatasets
    post:
      description: Creates new DataCollectionDataset object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATACOLLECTIONDATASET'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTIONDATASET'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new DataCollectionDatasets
      tags:
      - DataCollectionDatasets
  /datagateway-api/datacollectiondatasets/{id_}:
    delete:
      description: Updates DataCollectionDataset with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete DataCollectionDatasets by id
      tags:
      - DataCollectionDatasets
    get:
      description: Retrieves a list of DataCollectionDataset objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTIONDATASET'
          description: Success - the matching DataCollectionDataset
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the DataCollectionDataset matching the given ID
      tags:
      - DataCollectionDatasets
    patch:
      description: Updates DataCollectionDataset with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATACOLLECTIONDATASET'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTIONDATASET'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DataCollectionDatasets by id
      tags:
      - DataCollectionDatasets
  /datagateway-api/datacollectiondatasets/count:
    get:
      description: Return the count of the DataCollectionDataset objects that would
        be retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the DataCollectionDataset objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count DataCollectionDatasets
      tags:
      - DataCollectionDatasets
  /datagateway-api/datacollectiondatasets/findone:
    get:
      description: Retrieves the first DataCollectionDataset objects that satisfies
        the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTIONDATASET'
          description: Success - a DataCollectionDataset object that satisfies the
            filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single DataCollectionDataset
      tags:
      - DataCollectionDatasets
  /datagateway-api/datacollectionparameters:
    get:
      description: Retrieves a list of DataCollectionParameter objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
                type: array
          description: Success - returns DataCollectionParameter that satisfy the
            filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get DataCollectionParameters
      tags:
      - DataCollectionParameters
    patch:
      description: Updates DataCollectionParameter object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DataCollectionParameters
      tags:
      - DataCollectionParameters
    post:
      description: Creates new DataCollectionParameter object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new DataCollectionParameters
      tags:
      - DataCollectionParameters
  /datagateway-api/datacollectionparameters/{id_}:
    delete:
      description: Updates DataCollectionParameter with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete DataCollectionParameters by id
      tags:
      - DataCollectionParameters
    get:
      description: Retrieves a list of DataCollectionParameter objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
          description: Success - the matching DataCollectionParameter
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the DataCollectionParameter matching the given ID
      tags:
      - DataCollectionParameters
    patch:
      description: Updates DataCollectionParameter with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DataCollectionParameters by id
      tags:
      - DataCollectionParameters
  /datagateway-api/datacollectionparameters/count:
    get:
      description: Return the count of the DataCollectionParameter objects that would
        be retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the DataCollectionParameter objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count DataCollectionParameters
      tags:
      - DataCollectionParameters
  /datagateway-api/datacollectionparameters/findone:
    get:
      description: Retrieves the first DataCollectionParameter objects that satisfies
        the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'
          description: Success - a DataCollectionParameter object that satisfies the
            filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single DataCollectionParameter
      tags:
      - DataCollectionParameters
  /datagateway-api/datacollections:
    get:
      description: Retrieves a list of DataCollection objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTION'
                type: array
          description: Success - returns DataCollection that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get DataCollections
      tags:
      - DataCollections
    patch:
      description: Updates DataCollection object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATACOLLECTION'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTION'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DataCollections
      tags:
      - DataCollections
    post:
      description: Creates new DataCollection object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATACOLLECTION'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATACOLLECTION'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new DataCollections
      tags:
      - DataCollections
  /datagateway-api/datacollections/{id_}:
    delete:
      description: Updates DataCollection with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete DataCollections by id
      tags:
      - DataCollections
    get:
      description: Retrieves a list of DataCollection objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTION'
          description: Success - the matching DataCollection
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the DataCollection matching the given ID
      tags:
      - DataCollections
    patch:
      description: Updates DataCollection with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATACOLLECTION'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTION'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DataCollections by id
      tags:
      - DataCollections
  /datagateway-api/datacollections/count:
    get:
      description: Return the count of the DataCollection objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the DataCollection objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count DataCollections
      tags:
      - DataCollections
  /datagateway-api/datacollections/findone:
    get:
      description: Retrieves the first DataCollection objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATACOLLECTION'
          description: Success - a DataCollection object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single DataCollection
      tags:
      - DataCollections
  /datagateway-api/datafileformats:
    get:
      description: Retrieves a list of DatafileFormat objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATAFILEFORMAT'
                type: array
          description: Success - returns DatafileFormat that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get DatafileFormats
      tags:
      - DatafileFormats
    patch:
      description: Updates DatafileFormat object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATAFILEFORMAT'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATAFILEFORMAT'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DatafileFormats
      tags:
      - DatafileFormats
    post:
      description: Creates new DatafileFormat object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATAFILEFORMAT'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATAFILEFORMAT'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new DatafileFormats
      tags:
      - DatafileFormats
  /datagateway-api/datafileformats/{id_}:
    delete:
      description: Updates DatafileFormat with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete DatafileFormats by id
      tags:
      - DatafileFormats
    get:
      description: Retrieves a list of DatafileFormat objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATAFILEFORMAT'
          description: Success - the matching DatafileFormat
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the DatafileFormat matching the given ID
      tags:
      - DatafileFormats
    patch:
      description: Updates DatafileFormat with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATAFILEFORMAT'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATAFILEFORMAT'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DatafileFormats by id
      tags:
      - DatafileFormats
  /datagateway-api/datafileformats/count:
    get:
      description: Return the count of the DatafileFormat objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the DatafileFormat objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count DatafileFormats
      tags:
      - DatafileFormats
  /datagateway-api/datafileformats/findone:
    get:
      description: Retrieves the first DatafileFormat objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATAFILEFORMAT'
          description: Success - a DatafileFormat object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single DatafileFormat
      tags:
      - DatafileFormats
  /datagateway-api/datafileparameters:
    get:
      description: Retrieves a list of DatafileParameter objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATAFILEPARAMETER'
                type: array
          description: Success - returns DatafileParameter that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get DatafileParameters
      tags:
      - DatafileParameters
    patch:
      description: Updates DatafileParameter object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATAFILEPARAMETER'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATAFILEPARAMETER'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DatafileParameters
      tags:
      - DatafileParameters
    post:
      description: Creates new DatafileParameter object(s) with details provided in
        the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATAFILEPARAMETER'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATAFILEPARAMETER'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new DatafileParameters
      tags:
      - DatafileParameters
  /datagateway-api/datafileparameters/{id_}:
    delete:
      description: Updates DatafileParameter with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete DatafileParameters by id
      tags:
      - DatafileParameters
    get:
      description: Retrieves a list of DatafileParameter objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATAFILEPARAMETER'
          description: Success - the matching DatafileParameter
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the DatafileParameter matching the given ID
      tags:
      - DatafileParameters
    patch:
      description: Updates DatafileParameter with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATAFILEPARAMETER'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATAFILEPARAMETER'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DatafileParameters by id
      tags:
      - DatafileParameters
  /datagateway-api/datafileparameters/count:
    get:
      description: Return the count of the DatafileParameter objects that would be
        retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the DatafileParameter objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count DatafileParameters
      tags:
      - DatafileParameters
  /datagateway-api/datafileparameters/findone:
    get:
      description: Retrieves the first DatafileParameter objects that satisfies the
        filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATAFILEPARAMETER'
          description: Success - a DatafileParameter object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single DatafileParameter
      tags:
      - DatafileParameters
  /datagateway-api/datafiles:
    get:
      description: Retrieves a list of Datafile objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATAFILE'
                type: array
          description: Success - returns Datafile that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Datafiles
      tags:
      - Datafiles
    patch:
      description: Updates Datafile object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATAFILE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATAFILE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Datafiles
      tags:
      - Datafiles
    post:
      description: Creates new Datafile object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATAFILE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATAFILE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Datafiles
      tags:
      - Datafiles
  /datagateway-api/datafiles/{id_}:
    delete:
      description: Updates Datafile with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Datafiles by id
      tags:
      - Datafiles
    get:
      description: Retrieves a list of Datafile objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATAFILE'
          description: Success - the matching Datafile
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Datafile matching the given ID
      tags:
      - Datafiles
    patch:
      description: Updates Datafile with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATAFILE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATAFILE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Datafiles by id
      tags:
      - Datafiles
  /datagateway-api/datafiles/count:
    get:
      description: Return the count of the Datafile objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Datafile objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Datafiles
      tags:
      - Datafiles
  /datagateway-api/datafiles/findone:
    get:
      description: Retrieves the first Datafile objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATAFILE'
          description: Success - a Datafile object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Datafile
      tags:
      - Datafiles
  /datagateway-api/datasetparameters:
    get:
      description: Retrieves a list of DatasetParameter objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATASETPARAMETER'
                type: array
          description: Success - returns DatasetParameter that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get DatasetParameters
      tags:
      - DatasetParameters
    patch:
      description: Updates DatasetParameter object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATASETPARAMETER'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATASETPARAMETER'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DatasetParameters
      tags:
      - DatasetParameters
    post:
      description: Creates new DatasetParameter object(s) with details provided in
        the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATASETPARAMETER'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATASETPARAMETER'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new DatasetParameters
      tags:
      - DatasetParameters
  /datagateway-api/datasetparameters/{id_}:
    delete:
      description: Updates DatasetParameter with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete DatasetParameters by id
      tags:
      - DatasetParameters
    get:
      description: Retrieves a list of DatasetParameter objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATASETPARAMETER'
          description: Success - the matching DatasetParameter
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the DatasetParameter matching the given ID
      tags:
      - DatasetParameters
    patch:
      description: Updates DatasetParameter with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATASETPARAMETER'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATASETPARAMETER'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DatasetParameters by id
      tags:
      - DatasetParameters
  /datagateway-api/datasetparameters/count:
    get:
      description: Return the count of the DatasetParameter objects that would be
        retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the DatasetParameter objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count DatasetParameters
      tags:
      - DatasetParameters
  /datagateway-api/datasetparameters/findone:
    get:
      description: Retrieves the first DatasetParameter objects that satisfies the
        filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATASETPARAMETER'
          description: Success - a DatasetParameter object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single DatasetParameter
      tags:
      - DatasetParameters
  /datagateway-api/datasettypes:
    get:
      description: Retrieves a list of DatasetType objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATASETTYPE'
                type: array
          description: Success - returns DatasetType that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get DatasetTypes
      tags:
      - DatasetTypes
    patch:
      description: Updates DatasetType object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATASETTYPE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATASETTYPE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DatasetTypes
      tags:
      - DatasetTypes
    post:
      description: Creates new DatasetType object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATASETTYPE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATASETTYPE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new DatasetTypes
      tags:
      - DatasetTypes
  /datagateway-api/datasettypes/{id_}:
    delete:
      description: Updates DatasetType with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete DatasetTypes by id
      tags:
      - DatasetTypes
    get:
      description: Retrieves a list of DatasetType objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATASETTYPE'
          description: Success - the matching DatasetType
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the DatasetType matching the given ID
      tags:
      - DatasetTypes
    patch:
      description: Updates DatasetType with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATASETTYPE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATASETTYPE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update DatasetTypes by id
      tags:
      - DatasetTypes
  /datagateway-api/datasettypes/count:
    get:
      description: Return the count of the DatasetType objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the DatasetType objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count DatasetTypes
      tags:
      - DatasetTypes
  /datagateway-api/datasettypes/findone:
    get:
      description: Retrieves the first DatasetType objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATASETTYPE'
          description: Success - a DatasetType object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single DatasetType
      tags:
      - DatasetTypes
  /datagateway-api/datasets:
    get:
      description: Retrieves a list of Dataset objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATASET'
                type: array
          description: Success - returns Dataset that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Datasets
      tags:
      - Datasets
    patch:
      description: Updates Dataset object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATASET'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATASET'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Datasets
      tags:
      - Datasets
    post:
      description: Creates new Dataset object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DATASET'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DATASET'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Datasets
      tags:
      - Datasets
  /datagateway-api/datasets/{id_}:
    delete:
      description: Updates Dataset with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Datasets by id
      tags:
      - Datasets
    get:
      description: Retrieves a list of Dataset objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATASET'
          description: Success - the matching Dataset
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Dataset matching the given ID
      tags:
      - Datasets
    patch:
      description: Updates Dataset with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DATASET'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATASET'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Datasets by id
      tags:
      - Datasets
  /datagateway-api/datasets/count:
    get:
      description: Return the count of the Dataset objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Dataset objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Datasets
      tags:
      - Datasets
  /datagateway-api/datasets/findone:
    get:
      description: Retrieves the first Dataset objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DATASET'
          description: Success - a Dataset object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Dataset
      tags:
      - Datasets
  /datagateway-api/facilities:
    get:
      description: Retrieves a list of Facility objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FACILITY'
                type: array
          description: Success - returns Facility that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Facilities
      tags:
      - Facilities
    patch:
      description: Updates Facility object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FACILITY'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FACILITY'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Facilities
      tags:
      - Facilities
    post:
      description: Creates new Facility object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FACILITY'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FACILITY'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Facilities
      tags:
      - Facilities
  /datagateway-api/facilities/{id_}:
    delete:
      description: Updates Facility with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Facilities by id
      tags:
      - Facilities
    get:
      description: Retrieves a list of Facility objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FACILITY'
          description: Success - the matching Facility
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Facility matching the given ID
      tags:
      - Facilities
    patch:
      description: Updates Facility with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FACILITY'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FACILITY'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Facilities by id
      tags:
      - Facilities
  /datagateway-api/facilities/count:
    get:
      description: Return the count of the Facility objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Facility objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Facilities
      tags:
      - Facilities
  /datagateway-api/facilities/findone:
    get:
      description: Retrieves the first Facility objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FACILITY'
          description: Success - a Facility object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Facility
      tags:
      - Facilities
  /datagateway-api/facilitycycles:
    get:
      description: Retrieves a list of FacilityCycle objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FACILITYCYCLE'
                type: array
          description: Success - returns FacilityCycle that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get FacilityCycles
      tags:
      - FacilityCycles
    patch:
      description: Updates FacilityCycle object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FACILITYCYCLE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FACILITYCYCLE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update FacilityCycles
      tags:
      - FacilityCycles
    post:
      description: Creates new FacilityCycle object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FACILITYCYCLE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FACILITYCYCLE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new FacilityCycles
      tags:
      - FacilityCycles
  /datagateway-api/facilitycycles/{id_}:
    delete:
      description: Updates FacilityCycle with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete FacilityCycles by id
      tags:
      - FacilityCycles
    get:
      description: Retrieves a list of FacilityCycle objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FACILITYCYCLE'
          description: Success - the matching FacilityCycle
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the FacilityCycle matching the given ID
      tags:
      - FacilityCycles
    patch:
      description: Updates FacilityCycle with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FACILITYCYCLE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FACILITYCYCLE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update FacilityCycles by id
      tags:
      - FacilityCycles
  /datagateway-api/facilitycycles/count:
    get:
      description: Return the count of the FacilityCycle objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the FacilityCycle objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count FacilityCycles
      tags:
      - FacilityCycles
  /datagateway-api/facilitycycles/findone:
    get:
      description: Retrieves the first FacilityCycle objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FACILITYCYCLE'
          description: Success - a FacilityCycle object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single FacilityCycle
      tags:
      - FacilityCycles
  /datagateway-api/groupings:
    get:
      description: Retrieves a list of Grouping objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GROUPING'
                type: array
          description: Success - returns Grouping that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Groupings
      tags:
      - Groupings
    patch:
      description: Updates Grouping object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/GROUPING'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GROUPING'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Groupings
      tags:
      - Groupings
    post:
      description: Creates new Grouping object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/GROUPING'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GROUPING'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Groupings
      tags:
      - Groupings
  /datagateway-api/groupings/{id_}:
    delete:
      description: Updates Grouping with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Groupings by id
      tags:
      - Groupings
    get:
      description: Retrieves a list of Grouping objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GROUPING'
          description: Success - the matching Grouping
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Grouping matching the given ID
      tags:
      - Groupings
    patch:
      description: Updates Grouping with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GROUPING'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GROUPING'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Groupings by id
      tags:
      - Groupings
  /datagateway-api/groupings/count:
    get:
      description: Return the count of the Grouping objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Grouping objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Groupings
      tags:
      - Groupings
  /datagateway-api/groupings/findone:
    get:
      description: Retrieves the first Grouping objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GROUPING'
          description: Success - a Grouping object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Grouping
      tags:
      - Groupings
  /datagateway-api/instrumentscientists:
    get:
      description: Retrieves a list of InstrumentScientist objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
                type: array
          description: Success - returns InstrumentScientist that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get InstrumentScientists
      tags:
      - InstrumentScientists
    patch:
      description: Updates InstrumentScientist object(s) with details provided in
        the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InstrumentScientists
      tags:
      - InstrumentScientists
    post:
      description: Creates new InstrumentScientist object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new InstrumentScientists
      tags:
      - InstrumentScientists
  /datagateway-api/instrumentscientists/{id_}:
    delete:
      description: Updates InstrumentScientist with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete InstrumentScientists by id
      tags:
      - InstrumentScientists
    get:
      description: Retrieves a list of InstrumentScientist objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
          description: Success - the matching InstrumentScientist
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the InstrumentScientist matching the given ID
      tags:
      - InstrumentScientists
    patch:
      description: Updates InstrumentScientist with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InstrumentScientists by id
      tags:
      - InstrumentScientists
  /datagateway-api/instrumentscientists/count:
    get:
      description: Return the count of the InstrumentScientist objects that would
        be retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the InstrumentScientist objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count InstrumentScientists
      tags:
      - InstrumentScientists
  /datagateway-api/instrumentscientists/findone:
    get:
      description: Retrieves the first InstrumentScientist objects that satisfies
        the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'
          description: Success - a InstrumentScientist object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single InstrumentScientist
      tags:
      - InstrumentScientists
  /datagateway-api/instruments:
    get:
      description: Retrieves a list of Instrument objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INSTRUMENT'
                type: array
          description: Success - returns Instrument that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Instruments
      tags:
      - Instruments
    patch:
      description: Updates Instrument object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INSTRUMENT'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INSTRUMENT'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Instruments
      tags:
      - Instruments
    post:
      description: Creates new Instrument object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INSTRUMENT'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INSTRUMENT'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Instruments
      tags:
      - Instruments
  /datagateway-api/instruments/{id_}:
    delete:
      description: Updates Instrument with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Instruments by id
      tags:
      - Instruments
    get:
      description: Retrieves a list of Instrument objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INSTRUMENT'
          description: Success - the matching Instrument
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Instrument matching the given ID
      tags:
      - Instruments
    patch:
      description: Updates Instrument with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/INSTRUMENT'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INSTRUMENT'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Instruments by id
      tags:
      - Instruments
  /datagateway-api/instruments/count:
    get:
      description: Return the count of the Instrument objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Instrument objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Instruments
      tags:
      - Instruments
  /datagateway-api/instruments/findone:
    get:
      description: Retrieves the first Instrument objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INSTRUMENT'
          description: Success - a Instrument object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Instrument
      tags:
      - Instruments
  /datagateway-api/investigationgroups:
    get:
      description: Retrieves a list of InvestigationGroup objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONGROUP'
                type: array
          description: Success - returns InvestigationGroup that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get InvestigationGroups
      tags:
      - InvestigationGroups
    patch:
      description: Updates InvestigationGroup object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONGROUP'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONGROUP'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationGroups
      tags:
      - InvestigationGroups
    post:
      description: Creates new InvestigationGroup object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONGROUP'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONGROUP'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new InvestigationGroups
      tags:
      - InvestigationGroups
  /datagateway-api/investigationgroups/{id_}:
    delete:
      description: Updates InvestigationGroup with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete InvestigationGroups by id
      tags:
      - InvestigationGroups
    get:
      description: Retrieves a list of InvestigationGroup objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONGROUP'
          description: Success - the matching InvestigationGroup
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the InvestigationGroup matching the given ID
      tags:
      - InvestigationGroups
    patch:
      description: Updates InvestigationGroup with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/INVESTIGATIONGROUP'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONGROUP'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationGroups by id
      tags:
      - InvestigationGroups
  /datagateway-api/investigationgroups/count:
    get:
      description: Return the count of the InvestigationGroup objects that would be
        retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the InvestigationGroup objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count InvestigationGroups
      tags:
      - InvestigationGroups
  /datagateway-api/investigationgroups/findone:
    get:
      description: Retrieves the first InvestigationGroup objects that satisfies the
        filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONGROUP'
          description: Success - a InvestigationGroup object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single InvestigationGroup
      tags:
      - InvestigationGroups
  /datagateway-api/investigationinstruments:
    get:
      description: Retrieves a list of InvestigationInstrument objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
                type: array
          description: Success - returns InvestigationInstrument that satisfy the
            filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get InvestigationInstruments
      tags:
      - InvestigationInstruments
    patch:
      description: Updates InvestigationInstrument object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationInstruments
      tags:
      - InvestigationInstruments
    post:
      description: Creates new InvestigationInstrument object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new InvestigationInstruments
      tags:
      - InvestigationInstruments
  /datagateway-api/investigationinstruments/{id_}:
    delete:
      description: Updates InvestigationInstrument with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete InvestigationInstruments by id
      tags:
      - InvestigationInstruments
    get:
      description: Retrieves a list of InvestigationInstrument objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
          description: Success - the matching InvestigationInstrument
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the InvestigationInstrument matching the given ID
      tags:
      - InvestigationInstruments
    patch:
      description: Updates InvestigationInstrument with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationInstruments by id
      tags:
      - InvestigationInstruments
  /datagateway-api/investigationinstruments/count:
    get:
      description: Return the count of the InvestigationInstrument objects that would
        be retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the InvestigationInstrument objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count InvestigationInstruments
      tags:
      - InvestigationInstruments
  /datagateway-api/investigationinstruments/findone:
    get:
      description: Retrieves the first InvestigationInstrument objects that satisfies
        the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'
          description: Success - a InvestigationInstrument object that satisfies the
            filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single InvestigationInstrument
      tags:
      - InvestigationInstruments
  /datagateway-api/investigationparameters:
    get:
      description: Retrieves a list of InvestigationParameter objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
                type: array
          description: Success - returns InvestigationParameter that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get InvestigationParameters
      tags:
      - InvestigationParameters
    patch:
      description: Updates InvestigationParameter object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationParameters
      tags:
      - InvestigationParameters
    post:
      description: Creates new InvestigationParameter object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new InvestigationParameters
      tags:
      - InvestigationParameters
  /datagateway-api/investigationparameters/{id_}:
    delete:
      description: Updates InvestigationParameter with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete InvestigationParameters by id
      tags:
      - InvestigationParameters
    get:
      description: Retrieves a list of InvestigationParameter objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
          description: Success - the matching InvestigationParameter
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the InvestigationParameter matching the given ID
      tags:
      - InvestigationParameters
    patch:
      description: Updates InvestigationParameter with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationParameters by id
      tags:
      - InvestigationParameters
  /datagateway-api/investigationparameters/count:
    get:
      description: Return the count of the InvestigationParameter objects that would
        be retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the InvestigationParameter objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count InvestigationParameters
      tags:
      - InvestigationParameters
  /datagateway-api/investigationparameters/findone:
    get:
      description: Retrieves the first InvestigationParameter objects that satisfies
        the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'
          description: Success - a InvestigationParameter object that satisfies the
            filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single InvestigationParameter
      tags:
      - InvestigationParameters
  /datagateway-api/investigationtypes:
    get:
      description: Retrieves a list of InvestigationType objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONTYPE'
                type: array
          description: Success - returns InvestigationType that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get InvestigationTypes
      tags:
      - InvestigationTypes
    patch:
      description: Updates InvestigationType object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONTYPE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONTYPE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationTypes
      tags:
      - InvestigationTypes
    post:
      description: Creates new InvestigationType object(s) with details provided in
        the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONTYPE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONTYPE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new InvestigationTypes
      tags:
      - InvestigationTypes
  /datagateway-api/investigationtypes/{id_}:
    delete:
      description: Updates InvestigationType with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete InvestigationTypes by id
      tags:
      - InvestigationTypes
    get:
      description: Retrieves a list of InvestigationType objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONTYPE'
          description: Success - the matching InvestigationType
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the InvestigationType matching the given ID
      tags:
      - InvestigationTypes
    patch:
      description: Updates InvestigationType with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/INVESTIGATIONTYPE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONTYPE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationTypes by id
      tags:
      - InvestigationTypes
  /datagateway-api/investigationtypes/count:
    get:
      description: Return the count of the InvestigationType objects that would be
        retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the InvestigationType objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count InvestigationTypes
      tags:
      - InvestigationTypes
  /datagateway-api/investigationtypes/findone:
    get:
      description: Retrieves the first InvestigationType objects that satisfies the
        filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONTYPE'
          description: Success - a InvestigationType object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single InvestigationType
      tags:
      - InvestigationTypes
  /datagateway-api/investigationusers:
    get:
      description: Retrieves a list of InvestigationUser objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONUSER'
                type: array
          description: Success - returns InvestigationUser that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get InvestigationUsers
      tags:
      - InvestigationUsers
    patch:
      description: Updates InvestigationUser object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONUSER'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONUSER'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationUsers
      tags:
      - InvestigationUsers
    post:
      description: Creates new InvestigationUser object(s) with details provided in
        the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATIONUSER'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATIONUSER'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new InvestigationUsers
      tags:
      - InvestigationUsers
  /datagateway-api/investigationusers/{id_}:
    delete:
      description: Updates InvestigationUser with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete InvestigationUsers by id
      tags:
      - InvestigationUsers
    get:
      description: Retrieves a list of InvestigationUser objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONUSER'
          description: Success - the matching InvestigationUser
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the InvestigationUser matching the given ID
      tags:
      - InvestigationUsers
    patch:
      description: Updates InvestigationUser with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/INVESTIGATIONUSER'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONUSER'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update InvestigationUsers by id
      tags:
      - InvestigationUsers
  /datagateway-api/investigationusers/count:
    get:
      description: Return the count of the InvestigationUser objects that would be
        retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the InvestigationUser objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count InvestigationUsers
      tags:
      - InvestigationUsers
  /datagateway-api/investigationusers/findone:
    get:
      description: Retrieves the first InvestigationUser objects that satisfies the
        filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATIONUSER'
          description: Success - a InvestigationUser object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single InvestigationUser
      tags:
      - InvestigationUsers
  /datagateway-api/investigations:
    get:
      description: Retrieves a list of Investigation objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATION'
                type: array
          description: Success - returns Investigation that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Investigations
      tags:
      - Investigations
    patch:
      description: Updates Investigation object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATION'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATION'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Investigations
      tags:
      - Investigations
    post:
      description: Creates new Investigation object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/INVESTIGATION'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATION'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Investigations
      tags:
      - Investigations
  /datagateway-api/investigations/{id_}:
    delete:
      description: Updates Investigation with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Investigations by id
      tags:
      - Investigations
    get:
      description: Retrieves a list of Investigation objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATION'
          description: Success - the matching Investigation
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Investigation matching the given ID
      tags:
      - Investigations
    patch:
      description: Updates Investigation with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/INVESTIGATION'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATION'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Investigations by id
      tags:
      - Investigations
  /datagateway-api/investigations/count:
    get:
      description: Return the count of the Investigation objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Investigation objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Investigations
      tags:
      - Investigations
  /datagateway-api/investigations/findone:
    get:
      description: Retrieves the first Investigation objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/INVESTIGATION'
          description: Success - a Investigation object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Investigation
      tags:
      - Investigations
  /datagateway-api/jobs:
    get:
      description: Retrieves a list of Job objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JOB'
                type: array
          description: Success - returns Job that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Jobs
      tags:
      - Jobs
    patch:
      description: Updates Job object(s) with details provided in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/JOB'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JOB'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Jobs
      tags:
      - Jobs
    post:
      description: Creates new Job object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/JOB'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JOB'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Jobs
      tags:
      - Jobs
  /datagateway-api/jobs/{id_}:
    delete:
      description: Updates Job with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Jobs by id
      tags:
      - Jobs
    get:
      description: Retrieves a list of Job objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JOB'
          description: Success - the matching Job
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Job matching the given ID
      tags:
      - Jobs
    patch:
      description: Updates Job with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JOB'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JOB'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Jobs by id
      tags:
      - Jobs
  /datagateway-api/jobs/count:
    get:
      description: Return the count of the Job objects that would be retrieved given
        the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Job objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Jobs
      tags:
      - Jobs
  /datagateway-api/jobs/findone:
    get:
      description: Retrieves the first Job objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JOB'
          description: Success - a Job object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Job
      tags:
      - Jobs
  /datagateway-api/keywords:
    get:
      description: Retrieves a list of Keyword objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KEYWORD'
                type: array
          description: Success - returns Keyword that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Keywords
      tags:
      - Keywords
    patch:
      description: Updates Keyword object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KEYWORD'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KEYWORD'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Keywords
      tags:
      - Keywords
    post:
      description: Creates new Keyword object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KEYWORD'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KEYWORD'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Keywords
      tags:
      - Keywords
  /datagateway-api/keywords/{id_}:
    delete:
      description: Updates Keyword with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Keywords by id
      tags:
      - Keywords
    get:
      description: Retrieves a list of Keyword objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KEYWORD'
          description: Success - the matching Keyword
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Keyword matching the given ID
      tags:
      - Keywords
    patch:
      description: Updates Keyword with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KEYWORD'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KEYWORD'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Keywords by id
      tags:
      - Keywords
  /datagateway-api/keywords/count:
    get:
      description: Return the count of the Keyword objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Keyword objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Keywords
      tags:
      - Keywords
  /datagateway-api/keywords/findone:
    get:
      description: Retrieves the first Keyword objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KEYWORD'
          description: Success - a Keyword object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Keyword
      tags:
      - Keywords
  /datagateway-api/parametertypes:
    get:
      description: Retrieves a list of ParameterType objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PARAMETERTYPE'
                type: array
          description: Success - returns ParameterType that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get ParameterTypes
      tags:
      - ParameterTypes
    patch:
      description: Updates ParameterType object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PARAMETERTYPE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PARAMETERTYPE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update ParameterTypes
      tags:
      - ParameterTypes
    post:
      description: Creates new ParameterType object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PARAMETERTYPE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PARAMETERTYPE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new ParameterTypes
      tags:
      - ParameterTypes
  /datagateway-api/parametertypes/{id_}:
    delete:
      description: Updates ParameterType with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete ParameterTypes by id
      tags:
      - ParameterTypes
    get:
      description: Retrieves a list of ParameterType objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PARAMETERTYPE'
          description: Success - the matching ParameterType
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the ParameterType matching the given ID
      tags:
      - ParameterTypes
    patch:
      description: Updates ParameterType with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PARAMETERTYPE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PARAMETERTYPE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update ParameterTypes by id
      tags:
      - ParameterTypes
  /datagateway-api/parametertypes/count:
    get:
      description: Return the count of the ParameterType objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the ParameterType objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count ParameterTypes
      tags:
      - ParameterTypes
  /datagateway-api/parametertypes/findone:
    get:
      description: Retrieves the first ParameterType objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PARAMETERTYPE'
          description: Success - a ParameterType object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single ParameterType
      tags:
      - ParameterTypes
  /datagateway-api/permissiblestringvalues:
    get:
      description: Retrieves a list of PermissibleStringValue objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
                type: array
          description: Success - returns PermissibleStringValue that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get PermissibleStringValues
      tags:
      - PermissibleStringValues
    patch:
      description: Updates PermissibleStringValue object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update PermissibleStringValues
      tags:
      - PermissibleStringValues
    post:
      description: Creates new PermissibleStringValue object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new PermissibleStringValues
      tags:
      - PermissibleStringValues
  /datagateway-api/permissiblestringvalues/{id_}:
    delete:
      description: Updates PermissibleStringValue with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete PermissibleStringValues by id
      tags:
      - PermissibleStringValues
    get:
      description: Retrieves a list of PermissibleStringValue objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
          description: Success - the matching PermissibleStringValue
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the PermissibleStringValue matching the given ID
      tags:
      - PermissibleStringValues
    patch:
      description: Updates PermissibleStringValue with the specified ID with details
        provided in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update PermissibleStringValues by id
      tags:
      - PermissibleStringValues
  /datagateway-api/permissiblestringvalues/count:
    get:
      description: Return the count of the PermissibleStringValue objects that would
        be retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the PermissibleStringValue objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count PermissibleStringValues
      tags:
      - PermissibleStringValues
  /datagateway-api/permissiblestringvalues/findone:
    get:
      description: Retrieves the first PermissibleStringValue objects that satisfies
        the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'
          description: Success - a PermissibleStringValue object that satisfies the
            filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single PermissibleStringValue
      tags:
      - PermissibleStringValues
  /datagateway-api/publicsteps:
    get:
      description: Retrieves a list of PublicStep objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PUBLICSTEP'
                type: array
          description: Success - returns PublicStep that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get PublicSteps
      tags:
      - PublicSteps
    patch:
      description: Updates PublicStep object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PUBLICSTEP'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PUBLICSTEP'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update PublicSteps
      tags:
      - PublicSteps
    post:
      description: Creates new PublicStep object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PUBLICSTEP'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PUBLICSTEP'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new PublicSteps
      tags:
      - PublicSteps
  /datagateway-api/publicsteps/{id_}:
    delete:
      description: Updates PublicStep with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete PublicSteps by id
      tags:
      - PublicSteps
    get:
      description: Retrieves a list of PublicStep objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PUBLICSTEP'
          description: Success - the matching PublicStep
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the PublicStep matching the given ID
      tags:
      - PublicSteps
    patch:
      description: Updates PublicStep with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUBLICSTEP'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PUBLICSTEP'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update PublicSteps by id
      tags:
      - PublicSteps
  /datagateway-api/publicsteps/count:
    get:
      description: Return the count of the PublicStep objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the PublicStep objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count PublicSteps
      tags:
      - PublicSteps
  /datagateway-api/publicsteps/findone:
    get:
      description: Retrieves the first PublicStep objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PUBLICSTEP'
          description: Success - a PublicStep object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single PublicStep
      tags:
      - PublicSteps
  /datagateway-api/publications:
    get:
      description: Retrieves a list of Publication objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PUBLICATION'
                type: array
          description: Success - returns Publication that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Publications
      tags:
      - Publications
    patch:
      description: Updates Publication object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PUBLICATION'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PUBLICATION'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Publications
      tags:
      - Publications
    post:
      description: Creates new Publication object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PUBLICATION'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PUBLICATION'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Publications
      tags:
      - Publications
  /datagateway-api/publications/{id_}:
    delete:
      description: Updates Publication with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Publications by id
      tags:
      - Publications
    get:
      description: Retrieves a list of Publication objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PUBLICATION'
          description: Success - the matching Publication
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Publication matching the given ID
      tags:
      - Publications
    patch:
      description: Updates Publication with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUBLICATION'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PUBLICATION'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Publications by id
      tags:
      - Publications
  /datagateway-api/publications/count:
    get:
      description: Return the count of the Publication objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Publication objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Publications
      tags:
      - Publications
  /datagateway-api/publications/findone:
    get:
      description: Retrieves the first Publication objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PUBLICATION'
          description: Success - a Publication object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Publication
      tags:
      - Publications
  /datagateway-api/relateddatafiles:
    get:
      description: Retrieves a list of RelatedDatafile objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RELATEDDATAFILE'
                type: array
          description: Success - returns RelatedDatafile that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get RelatedDatafiles
      tags:
      - RelatedDatafiles
    patch:
      description: Updates RelatedDatafile object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RELATEDDATAFILE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RELATEDDATAFILE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update RelatedDatafiles
      tags:
      - RelatedDatafiles
    post:
      description: Creates new RelatedDatafile object(s) with details provided in
        the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RELATEDDATAFILE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RELATEDDATAFILE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new RelatedDatafiles
      tags:
      - RelatedDatafiles
  /datagateway-api/relateddatafiles/{id_}:
    delete:
      description: Updates RelatedDatafile with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete RelatedDatafiles by id
      tags:
      - RelatedDatafiles
    get:
      description: Retrieves a list of RelatedDatafile objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RELATEDDATAFILE'
          description: Success - the matching RelatedDatafile
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the RelatedDatafile matching the given ID
      tags:
      - RelatedDatafiles
    patch:
      description: Updates RelatedDatafile with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RELATEDDATAFILE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RELATEDDATAFILE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update RelatedDatafiles by id
      tags:
      - RelatedDatafiles
  /datagateway-api/relateddatafiles/count:
    get:
      description: Return the count of the RelatedDatafile objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the RelatedDatafile objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count RelatedDatafiles
      tags:
      - RelatedDatafiles
  /datagateway-api/relateddatafiles/findone:
    get:
      description: Retrieves the first RelatedDatafile objects that satisfies the
        filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RELATEDDATAFILE'
          description: Success - a RelatedDatafile object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single RelatedDatafile
      tags:
      - RelatedDatafiles
  /datagateway-api/rules:
    get:
      description: Retrieves a list of Rule objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RULE'
                type: array
          description: Success - returns Rule that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Rules
      tags:
      - Rules
    patch:
      description: Updates Rule object(s) with details provided in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RULE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RULE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Rules
      tags:
      - Rules
    post:
      description: Creates new Rule object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RULE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RULE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Rules
      tags:
      - Rules
  /datagateway-api/rules/{id_}:
    delete:
      description: Updates Rule with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Rules by id
      tags:
      - Rules
    get:
      description: Retrieves a list of Rule objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RULE'
          description: Success - the matching Rule
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Rule matching the given ID
      tags:
      - Rules
    patch:
      description: Updates Rule with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RULE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RULE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Rules by id
      tags:
      - Rules
  /datagateway-api/rules/count:
    get:
      description: Return the count of the Rule objects that would be retrieved given
        the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Rule objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Rules
      tags:
      - Rules
  /datagateway-api/rules/findone:
    get:
      description: Retrieves the first Rule objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RULE'
          description: Success - a Rule object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Rule
      tags:
      - Rules
  /datagateway-api/sampleparameters:
    get:
      description: Retrieves a list of SampleParameter objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SAMPLEPARAMETER'
                type: array
          description: Success - returns SampleParameter that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get SampleParameters
      tags:
      - SampleParameters
    patch:
      description: Updates SampleParameter object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SAMPLEPARAMETER'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SAMPLEPARAMETER'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update SampleParameters
      tags:
      - SampleParameters
    post:
      description: Creates new SampleParameter object(s) with details provided in
        the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SAMPLEPARAMETER'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SAMPLEPARAMETER'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new SampleParameters
      tags:
      - SampleParameters
  /datagateway-api/sampleparameters/{id_}:
    delete:
      description: Updates SampleParameter with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete SampleParameters by id
      tags:
      - SampleParameters
    get:
      description: Retrieves a list of SampleParameter objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMPLEPARAMETER'
          description: Success - the matching SampleParameter
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the SampleParameter matching the given ID
      tags:
      - SampleParameters
    patch:
      description: Updates SampleParameter with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMPLEPARAMETER'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMPLEPARAMETER'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update SampleParameters by id
      tags:
      - SampleParameters
  /datagateway-api/sampleparameters/count:
    get:
      description: Return the count of the SampleParameter objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the SampleParameter objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count SampleParameters
      tags:
      - SampleParameters
  /datagateway-api/sampleparameters/findone:
    get:
      description: Retrieves the first SampleParameter objects that satisfies the
        filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMPLEPARAMETER'
          description: Success - a SampleParameter object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single SampleParameter
      tags:
      - SampleParameters
  /datagateway-api/sampletypes:
    get:
      description: Retrieves a list of SampleType objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SAMPLETYPE'
                type: array
          description: Success - returns SampleType that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get SampleTypes
      tags:
      - SampleTypes
    patch:
      description: Updates SampleType object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SAMPLETYPE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SAMPLETYPE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update SampleTypes
      tags:
      - SampleTypes
    post:
      description: Creates new SampleType object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SAMPLETYPE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SAMPLETYPE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new SampleTypes
      tags:
      - SampleTypes
  /datagateway-api/sampletypes/{id_}:
    delete:
      description: Updates SampleType with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete SampleTypes by id
      tags:
      - SampleTypes
    get:
      description: Retrieves a list of SampleType objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMPLETYPE'
          description: Success - the matching SampleType
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the SampleType matching the given ID
      tags:
      - SampleTypes
    patch:
      description: Updates SampleType with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMPLETYPE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMPLETYPE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update SampleTypes by id
      tags:
      - SampleTypes
  /datagateway-api/sampletypes/count:
    get:
      description: Return the count of the SampleType objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the SampleType objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count SampleTypes
      tags:
      - SampleTypes
  /datagateway-api/sampletypes/findone:
    get:
      description: Retrieves the first SampleType objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMPLETYPE'
          description: Success - a SampleType object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single SampleType
      tags:
      - SampleTypes
  /datagateway-api/samples:
    get:
      description: Retrieves a list of Sample objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SAMPLE'
                type: array
          description: Success - returns Sample that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Samples
      tags:
      - Samples
    patch:
      description: Updates Sample object(s) with details provided in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SAMPLE'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SAMPLE'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Samples
      tags:
      - Samples
    post:
      description: Creates new Sample object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SAMPLE'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SAMPLE'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Samples
      tags:
      - Samples
  /datagateway-api/samples/{id_}:
    delete:
      description: Updates Sample with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Samples by id
      tags:
      - Samples
    get:
      description: Retrieves a list of Sample objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMPLE'
          description: Success - the matching Sample
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Sample matching the given ID
      tags:
      - Samples
    patch:
      description: Updates Sample with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMPLE'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMPLE'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Samples by id
      tags:
      - Samples
  /datagateway-api/samples/count:
    get:
      description: Return the count of the Sample objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Sample objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Samples
      tags:
      - Samples
  /datagateway-api/samples/findone:
    get:
      description: Retrieves the first Sample objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMPLE'
          description: Success - a Sample object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Sample
      tags:
      - Samples
  /datagateway-api/shifts:
    get:
      description: Retrieves a list of Shift objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SHIFT'
                type: array
          description: Success - returns Shift that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Shifts
      tags:
      - Shifts
    patch:
      description: Updates Shift object(s) with details provided in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SHIFT'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SHIFT'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Shifts
      tags:
      - Shifts
    post:
      description: Creates new Shift object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SHIFT'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SHIFT'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Shifts
      tags:
      - Shifts
  /datagateway-api/shifts/{id_}:
    delete:
      description: Updates Shift with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Shifts by id
      tags:
      - Shifts
    get:
      description: Retrieves a list of Shift objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SHIFT'
          description: Success - the matching Shift
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Shift matching the given ID
      tags:
      - Shifts
    patch:
      description: Updates Shift with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SHIFT'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SHIFT'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Shifts by id
      tags:
      - Shifts
  /datagateway-api/shifts/count:
    get:
      description: Return the count of the Shift objects that would be retrieved given
        the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Shift objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Shifts
      tags:
      - Shifts
  /datagateway-api/shifts/findone:
    get:
      description: Retrieves the first Shift objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SHIFT'
          description: Success - a Shift object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Shift
      tags:
      - Shifts
  /datagateway-api/studies:
    get:
      description: Retrieves a list of Study objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/STUDY'
                type: array
          description: Success - returns Study that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Studies
      tags:
      - Studies
    patch:
      description: Updates Study object(s) with details provided in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/STUDY'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/STUDY'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Studies
      tags:
      - Studies
    post:
      description: Creates new Study object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/STUDY'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/STUDY'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Studies
      tags:
      - Studies
  /datagateway-api/studies/{id_}:
    delete:
      description: Updates Study with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Studies by id
      tags:
      - Studies
    get:
      description: Retrieves a list of Study objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STUDY'
          description: Success - the matching Study
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the Study matching the given ID
      tags:
      - Studies
    patch:
      description: Updates Study with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/STUDY'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STUDY'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Studies by id
      tags:
      - Studies
  /datagateway-api/studies/count:
    get:
      description: Return the count of the Study objects that would be retrieved given
        the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the Study objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Studies
      tags:
      - Studies
  /datagateway-api/studies/findone:
    get:
      description: Retrieves the first Study objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STUDY'
          description: Success - a Study object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single Study
      tags:
      - Studies
  /datagateway-api/studyinvestigations:
    get:
      description: Retrieves a list of StudyInvestigation objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/STUDYINVESTIGATION'
                type: array
          description: Success - returns StudyInvestigation that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get StudyInvestigations
      tags:
      - StudyInvestigations
    patch:
      description: Updates StudyInvestigation object(s) with details provided in the
        request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/STUDYINVESTIGATION'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/STUDYINVESTIGATION'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update StudyInvestigations
      tags:
      - StudyInvestigations
    post:
      description: Creates new StudyInvestigation object(s) with details provided
        in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/STUDYINVESTIGATION'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/STUDYINVESTIGATION'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new StudyInvestigations
      tags:
      - StudyInvestigations
  /datagateway-api/studyinvestigations/{id_}:
    delete:
      description: Updates StudyInvestigation with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete StudyInvestigations by id
      tags:
      - StudyInvestigations
    get:
      description: Retrieves a list of StudyInvestigation objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STUDYINVESTIGATION'
          description: Success - the matching StudyInvestigation
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the StudyInvestigation matching the given ID
      tags:
      - StudyInvestigations
    patch:
      description: Updates StudyInvestigation with the specified ID with details provided
        in the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/STUDYINVESTIGATION'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STUDYINVESTIGATION'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update StudyInvestigations by id
      tags:
      - StudyInvestigations
  /datagateway-api/studyinvestigations/count:
    get:
      description: Return the count of the StudyInvestigation objects that would be
        retrieved given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the StudyInvestigation objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count StudyInvestigations
      tags:
      - StudyInvestigations
  /datagateway-api/studyinvestigations/findone:
    get:
      description: Retrieves the first StudyInvestigation objects that satisfies the
        filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STUDYINVESTIGATION'
          description: Success - a StudyInvestigation object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single StudyInvestigation
      tags:
      - StudyInvestigations
  /datagateway-api/usergroups:
    get:
      description: Retrieves a list of UserGroup objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/USERGROUP'
                type: array
          description: Success - returns UserGroup that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get UserGroups
      tags:
      - UserGroups
    patch:
      description: Updates UserGroup object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/USERGROUP'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/USERGROUP'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update UserGroups
      tags:
      - UserGroups
    post:
      description: Creates new UserGroup object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/USERGROUP'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/USERGROUP'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new UserGroups
      tags:
      - UserGroups
  /datagateway-api/usergroups/{id_}:
    delete:
      description: Updates UserGroup with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete UserGroups by id
      tags:
      - UserGroups
    get:
      description: Retrieves a list of UserGroup objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USERGROUP'
          description: Success - the matching UserGroup
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the UserGroup matching the given ID
      tags:
      - UserGroups
    patch:
      description: Updates UserGroup with the specified ID with details provided in
        the request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/USERGROUP'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USERGROUP'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update UserGroups by id
      tags:
      - UserGroups
  /datagateway-api/usergroups/count:
    get:
      description: Return the count of the UserGroup objects that would be retrieved
        given the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the UserGroup objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count UserGroups
      tags:
      - UserGroups
  /datagateway-api/usergroups/findone:
    get:
      description: Retrieves the first UserGroup objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USERGROUP'
          description: Success - a UserGroup object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single UserGroup
      tags:
      - UserGroups
  /datagateway-api/users:
    get:
      description: Retrieves a list of User objects
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/USER'
                type: array
          description: Success - returns User that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get Users
      tags:
      - Users
    patch:
      description: Updates User object(s) with details provided in the request body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/USER'
              type: array
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/USER'
                type: array
          description: Success - returns the updated object(s)
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Users
      tags:
      - Users
    post:
      description: Creates new User object(s) with details provided in the request
        body
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/USER'
              type: array
        description: The values to use to create the new object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/USER'
                type: array
          description: Success - returns the created object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Create new Users
      tags:
      - Users
  /datagateway-api/users/{id_}:
    delete:
      description: Updates User with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to delete
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: No Content - Object was successfully deleted
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Delete Users by id
      tags:
      - Users
    get:
      description: Retrieves a list of User objects
      parameters:
      - description: The id of the entity to retrieve
        in: path
        name: id_
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USER'
          description: Success - the matching User
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Find the User matching the given ID
      tags:
      - Users
    patch:
      description: Updates User with the specified ID with details provided in the
        request body
      parameters:
      - description: The id of the entity to update
        in: path
        name: id_
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/USER'
        description: The values to use to update the object(s) with
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USER'
          description: Success - returns the updated object
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Update Users by id
      tags:
      - Users
  /datagateway-api/users/count:
    get:
      description: Return the count of the User objects that would be retrieved given
        the filters provided
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the User objects
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count Users
      tags:
      - Users
  /datagateway-api/users/findone:
    get:
      description: Retrieves the first User objects that satisfies the filters.
      parameters:
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USER'
          description: Success - a User object that satisfies the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get single User
      tags:
      - Users
  /datagateway-api/sessions:
    delete:
      description: Deletes a users sessionID when they logout
      responses:
        '200':
          description: Success - User's session was successfully deleted
        '400':
          description: Bad request - something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: Not Found - Unable to find session ID
      summary: Delete session
      tags:
      - Sessions
    get:
      description: Gives details of a user's session
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  EXPIREDATETIME:
                    description: When this session expires
                    example: '2017-07-21T17:32:28Z'
                    format: datetime
                    type: string
                  ID:
                    description: The session ID
                    example: xxxxxx-yyyyyyy-zzzzzz
                    type: string
                  USERNAME:
                    description: Username associated with this session
                    type: string
                type: object
          description: Success - a user's session details
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
      summary: Get session details
      tags:
      - Sessions
    post:
      description: Generates a sessionID if the user has correct credentials
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mechanism:
                  type: string
                password:
                  type: string
                username:
                  type: string
              type: object
        description: User credentials to login with
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  sessionID:
                    description: Session ID
                    example: xxxxxx-yyyyyyy-zzzzzz
                    type: string
                type: object
          description: Success - returns a session ID
        '400':
          description: Bad request - User credentials not provided in request body
        '403':
          description: Forbidden - User credentials were invalid
      security: []
      summary: Login
      tags:
      - Sessions
    put:
      description: Refreshes a users session
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Session ID
                example: xxxxxx-yyyyyyy-zzzzzz
                type: string
          description: Success - the user's session ID that has been refreshed
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
      summary: Refresh session
      tags:
      - Sessions
  /datagateway-api/instruments/{id_}/facilitycycles:
    get:
      description: Given an Instrument id get facility cycles where the instrument
        has investigations that occur within that cycle, subject to the given filters
      parameters:
      - description: The id of the instrument to retrieve the facility cycles of
        in: path
        name: id_
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FACILITYCYCLE'
                type: array
          description: Success - returns a list of the instrument's facility cycles
            that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get an Instrument's FacilityCycles
      tags:
      - FacilityCycles
  /datagateway-api/instruments/{id_}/facilitycycles/count:
    get:
      description: Return the count of the Facility Cycles that have investigations
        that occur within that cycle on the specified instrument that would be retrieved
        given the filters provided
      parameters:
      - description: The id of the instrument to count the facility cycles of
        in: path
        name: id_
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the instrument's facility cycles that
            satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count an Instrument's FacilityCycles
      tags:
      - FacilityCycles
  /datagateway-api/instruments/{instrument_id}/facilitycycles/{cycle_id}/investigations:
    get:
      description: Given an Instrument id and Facility Cycle id, get the investigations
        that occur within that cycle on that instrument, subject to the given filters
      parameters:
      - description: The id of the instrument to retrieve the investigations of
        in: path
        name: instrument_id
        required: true
        schema:
          type: integer
      - description: The id of the facility cycle to retrieve the investigations
        in: path
        name: cycle_id
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/ORDER_FILTER'
      - $ref: '#/components/parameters/LIMIT_FILTER'
      - $ref: '#/components/parameters/SKIP_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      - $ref: '#/components/parameters/INCLUDE_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/INVESTIGATION'
                type: array
          description: Success - returns a list of the investigations for the given
            instrument and facility cycle that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Get the investigations for a given Facility Cycle & Instrument
      tags:
      - Investigations
  /datagateway-api/instruments/{instrument_id}/facilitycycles/{cycle_id}/investigations/count:
    get:
      description: Given an Instrument id and Facility Cycle id, get the number of
        investigations that occur within that cycle on that instrument, subject to
        the given filters
      parameters:
      - description: The id of the instrument to retrieve the investigations of
        in: path
        name: instrument_id
        required: true
        schema:
          type: integer
      - description: The id of the facility cycle to retrieve the investigations
        in: path
        name: cycle_id
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/WHERE_FILTER'
      - $ref: '#/components/parameters/DISTINCT_FILTER'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: integer
          description: Success - The count of the investigations for the given instrument
            and facility cycle that satisfy the filters
        '400':
          description: Bad request - Something was wrong with the request
        '401':
          description: Unauthorized - No session ID found in HTTP Auth. header
        '403':
          description: Forbidden - The session ID provided is invalid
        '404':
          description: No such record - Unable to find a record in ICAT
      summary: Count investigations for a given Facility Cycle & Instrument
      tags:
      - Investigations
  /datagateway-api/ping:
    get:
      description: Pings the API's connection method to check responsiveness
      responses:
        '200':
          content:
            application/json:
              schema:
                description: OK message
                example: DataGateway API OK
                type: string
          description: Success - the API is responsive on the backend configured
        '500':
          description: Pinging the API's connection method has gone wrong
      summary: Ping API connection method
      tags:
      - Ping
security:
- session_id: []
